add triangular tab button to display research cards
add triangular tab button to display planets
switch choosewrapper to focus in on the cards  and display a back button, a choose option if its a choice, and an add to selection options if its multiple choice
research web socket lib for exchange of state
add a clientid,
construct a server that'll deliver the App with a clientid linked to the game session
impliment a reset game function
calcwinner function
endgame if the influence pile is empty and the round has finished
endgame if x stacks are empty and the round has finished
change leader role/follow role and action functions when a stack changes
add planet, production zone, handsize, and icons images

{
    lobby:
    {
        sets: ['Base Game'],
        number_of_players:[ 2, 3, 4],
        newgame:(number_of_players, sets, game) => {},
        getexistinggames:()=>{
            returns list of [{game_id, game_name, number_of_players, slots},...]
        },
        enterexistinggame:(game_id, number_of_players, slot, player_name)=>{
            returns gamestate, player_id
        },
    }
}
select new game or existing game
    new
        which sets
        {Base Game,}
        how many players
        buttons {2,3,4,5(if expansion set is present)}
        send to server -> newgame, get a game id back
    existing
        choose which game
            {button for each game with game name, game id, number of players, occupied player slots}
    name / number your player
        select from empty player slots
        enter name into field
        send to server -> occupy player slot with game id, player name, slot number, get a gamestate back
    display your playingfield while its your turn
        -> hand displays game.players[player_id] instead of acting player
        -> choose wrapper only allows selection if active_player_index == player_id
        -> playingfield has player name appended to the top
        -> remove passtoplayer toggles
        





game.subchoices     // where the phases can store temporary state
app.choosewrapper() // based on meta data and what phase / subphase it is, 
                    // apply the choice and call phasefinishfunction
app.offer(
        boolean /*option to skip | sets game.displayinfo.showoptiontoskip=boolean */,
        boolean /*allows multiple choices | sets game.displayinfo.allowformultipleselections=boolean */, 
        [string,array] /* available cards to choose from | game.displayinfo.selectionzone={'hand|discard|options|planets|unsettled_planets|settled_&_conquered_planets|research|rolecards'}, sets choices=array if specified*/, 
        string /* label for where the choice is stored | set with game[label]=*/ 
        callback /*callback that handles the choice or finishes the phase*/, 